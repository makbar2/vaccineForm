// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blazorVaccine.Data;

#nullable disable

namespace blazorVaccine.Migrations
{
    [DbContext(typeof(BlazorVaccineContext))]
    [Migration("20240814122930_checkFouteenEight")]
    partial class checkFouteenEight
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Vaccinator", b =>
                {
                    b.Property<string>("GPHC")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GPHC");

                    b.ToTable("Vaccinator");
                });

            modelBuilder.Entity("VaccineApplied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateApplied")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("VaccinatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("VaccineApplied");
                });

            modelBuilder.Entity("Vaccines", b =>
                {
                    b.Property<string>("BatchNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Expirey")
                        .HasColumnType("date");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BatchNumber");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("blazorVaccine.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GPAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MedicalHistoryid")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MedicalHistoryid");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("blazorVaccine.Models.PatientMedicalHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Allergies")
                        .HasColumnType("longtext");

                    b.Property<string>("BlackWaterFever")
                        .HasColumnType("longtext");

                    b.Property<string>("BloodDisorders")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentMedicines")
                        .HasColumnType("longtext");

                    b.Property<string>("Epilepsy")
                        .HasColumnType("longtext");

                    b.Property<string>("FeelingUnwell")
                        .HasColumnType("longtext");

                    b.Property<string>("HistoryAnxiety")
                        .HasColumnType("longtext");

                    b.Property<string>("Hypersensitive")
                        .HasColumnType("longtext");

                    b.Property<string>("Immunisations")
                        .HasColumnType("longtext");

                    b.Property<string>("LiverFunction")
                        .HasColumnType("longtext");

                    b.Property<string>("MedicalHistory")
                        .HasColumnType("longtext");

                    b.Property<string>("MedicalTreatment")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("SeriousReaction")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("PatientMedicalHistory");
                });

            modelBuilder.Entity("VaccineApplied", b =>
                {
                    b.HasOne("blazorVaccine.Models.Patient", null)
                        .WithMany("VaccinesApplied")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("blazorVaccine.Models.Patient", b =>
                {
                    b.HasOne("blazorVaccine.Models.PatientMedicalHistory", "MedicalHistory")
                        .WithMany()
                        .HasForeignKey("MedicalHistoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalHistory");
                });

            modelBuilder.Entity("blazorVaccine.Models.Patient", b =>
                {
                    b.Navigation("VaccinesApplied");
                });
#pragma warning restore 612, 618
        }
    }
}
