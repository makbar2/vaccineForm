@page "/" 
@inject Data.BlazorVaccineContext Context
@rendermode InteractiveServer
@using blazorVaccine.Models


<PageTitle>South Manchester Travel Clinic Form</PageTitle>

<h1>Travel Form</h1>

<EditForm Model="@patient" OnValidSubmit="@Submit" >
    <ObjectGraphDataAnnotationsValidator/>
    <ValidationSummary/>
    @switch(PageNum)
    {
        case 1:
            <PatientDetails Patient="@patient"/>
            break;
        case 2:
            <MedicalHistory PatientMedicalHistory="@patient.MedicalHistory"/>
            break;
    }
    @if(PageNum <= 1)
    {
        <button type="button" @onclick="()=> { PageNum--; }" disabled>Back</button>
    }else{
        <button type="button" @onclick="()=> { PageNum--; }">Back</button>
    }
    @if(PageNum >= 2)
    {
        <button  type="button" @onclick="()=> { PageNum++;  }" disabled>Next</button>
    }else{
        <button type="button" @onclick="()=> { PageNum++; }">Next</button>
    }
    <button type="submit">Submit</button>

</EditForm>
@code {
    /*
       
    */

    private Patient patient;
    private PatientMedicalHistory medicalHistory;
    private int PageNum;
    protected override void OnInitialized()
    {
        patient = new Patient();
        medicalHistory = new PatientMedicalHistory();
        patient.SetMedicalHistory(medicalHistory);
        PageNum = 1;
    }
    

    private async Task Submit(EditContext context)
    {
        try
        {
            Context.Patient.Add(patient);
            await Context.SaveChangesAsync();
            Console.WriteLine("Succesfully uploaded patient details to the database"); 

        }catch(Exception ex)
        {
            Console.WriteLine("There was an error in uploading the details to the databse: " + ex.Message);
        }
    }

    private void Invalid(EditContext context)
    {
        Console.WriteLine("yep"+ patient.FirstName);
    }
    
}
